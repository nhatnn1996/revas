import { Node } from './Node';
import { RevasCanvas } from './Canvas';
export declare function noop(): any;
export declare const EMPTY_OBJECT: any;
export declare const EMPTY_ARRAY: any[];
export declare function flatten(array: any[]): any[];
export declare const now: () => number;
export declare function applyAnimated(style: any, callback?: Function): any;
export declare function getMergedStyleFromNode(node: Node, callback?: Function): any;
export declare function getFrameFromNode(node: Node): import("./Node").Frame;
export declare function sortByZIndexAscending(a: Node, b: Node): number;
export declare function clamp(n: number, min: number, max: number): number;
export declare function getChars(str: string): readonly string[];
export declare function getWords(str: string): readonly string[];
export declare function setShadow(canvas: RevasCanvas, color: string, x: number, y: number, blur: number): () => void;
export declare function pushOpacity(canvas: RevasCanvas, opacity: number): typeof noop;
export declare type RevasAdapter = {
    createImage: () => HTMLImageElement;
    createOffscreenCanvas?: (width: number, height: number) => RevasCanvas;
    resetOffscreenCanvas?: (ctx: RevasCanvas, width: number, height: number) => RevasCanvas;
};
export declare const adapter: RevasAdapter;
