{"code":"import { createContext, createElement } from 'react';\r\nexport var AppContext = createContext({\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n    deviceRatio: 1,\r\n});\r\nexport function withContext(comp) {\r\n    comp.contextType = AppContext;\r\n    return comp;\r\n}\r\nexport function Root(props) {\r\n    return createElement(AppContext.Provider, { value: props }, createElement('Root', props));\r\n}\r\n","references":["/Users/fimplus/Desktop/revasReal/node_modules/@types/react/index.d.ts","/Users/fimplus/Desktop/revasReal/src/revas/core/Canvas.ts"],"dts":{"name":"/Users/fimplus/Desktop/revasReal/dist/types/revas/components/Context.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { RevasCanvas } from '../core/Canvas';\r\nexport interface AppContextType {\r\n    clientWidth: number;\r\n    clientHeight: number;\r\n    deviceRatio: number;\r\n    canvas?: RevasCanvas;\r\n    RTL?: boolean;\r\n}\r\nexport declare const AppContext: import(\"react\").Context<AppContextType>;\r\nexport declare function withContext<T>(comp: T): T;\r\nexport declare function Root(props: AppContextType): import(\"react\").FunctionComponentElement<import(\"react\").ProviderProps<AppContextType>>;\r\n"}}
