{"code":"import { __assign, __extends } from \"tslib\";\r\nimport * as React from 'react';\r\nimport { AnimatedValue } from '../core/Animated';\r\nvar Touchable = /** @class */ (function (_super) {\r\n    __extends(Touchable, _super);\r\n    function Touchable() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._style = {\r\n            opacity: new AnimatedValue(1),\r\n            animated: true\r\n        };\r\n        _this._tid = '';\r\n        _this._onTouchStart = function (e) {\r\n            _this._tid = Object.keys(e.touches)[0];\r\n            _this._start = e.touches[_this._tid];\r\n            _this._style.opacity.setValue(_this.props.activeOpacity);\r\n            _this.props.onPressIn && _this.props.onPressIn();\r\n        };\r\n        _this._onTouchEnd = function (e) {\r\n            if (_this._start && e.touches[_this._tid]) {\r\n                if (Math.abs(_this._start.x - e.touches[_this._tid].x) < 3 &&\r\n                    Math.abs(_this._start.y - e.touches[_this._tid].y) < 3) {\r\n                    _this.props.onPress && _this.props.onPress();\r\n                }\r\n            }\r\n            _this._style.opacity.setValue(1);\r\n            _this.props.onPressOut && _this.props.onPressOut();\r\n        };\r\n        return _this;\r\n    }\r\n    Touchable.prototype.render = function () {\r\n        return React.createElement('Touchable', __assign(__assign({ onTouchStart: this._onTouchStart, onTouchEnd: this._onTouchEnd }, this.props), { style: [\r\n                this.props.style,\r\n                this._style\r\n            ] }));\r\n    };\r\n    Touchable.defaultProps = {\r\n        activeOpacity: 0.7\r\n    };\r\n    return Touchable;\r\n}(React.Component));\r\nexport default Touchable;\r\n","references":["/Users/fimplus/Desktop/revasReal/node_modules/@types/react/index.d.ts","/Users/fimplus/Desktop/revasReal/src/revas/core/Node.ts","/Users/fimplus/Desktop/revasReal/src/revas/core/Animated.ts"],"dts":{"name":"/Users/fimplus/Desktop/revasReal/dist/types/revas/components/Touchable.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { BaseProps, RevasTouchEvent } from '../core/Node';\r\nimport { AnimatedValue } from '../core/Animated';\r\nexport declare type TouchableProps = {\r\n    onPress: Function;\r\n    onPressIn?: Function;\r\n    onPressOut?: Function;\r\n    activeOpacity?: number;\r\n} & BaseProps;\r\nexport default class Touchable extends React.Component<TouchableProps> {\r\n    static defaultProps: {\r\n        activeOpacity: number;\r\n    };\r\n    _style: {\r\n        opacity: AnimatedValue;\r\n        animated: boolean;\r\n    };\r\n    private _start?;\r\n    private _tid;\r\n    private _onTouchStart;\r\n    private _onTouchEnd;\r\n    render(): React.ReactElement<{\r\n        style: any[];\r\n        onPress: Function;\r\n        onPressIn?: Function | undefined;\r\n        onPressOut?: Function | undefined;\r\n        activeOpacity?: number | undefined;\r\n        children?: React.ReactNode;\r\n        cache?: string | boolean | undefined;\r\n        forceCache?: boolean | undefined;\r\n        onTouchStart: (e: RevasTouchEvent) => void;\r\n        onTouchEnd: (e: RevasTouchEvent) => void;\r\n    }, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;\r\n}\r\n"}}
