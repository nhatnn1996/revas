{"code":"var Frame = /** @class */ (function () {\r\n    function Frame(x, y, width, height) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    return Frame;\r\n}());\r\nexport { Frame };\r\nvar Node = /** @class */ (function () {\r\n    function Node(type, props) {\r\n        this.type = type;\r\n        this.props = props;\r\n        this.children = [];\r\n        this.frame = new Frame();\r\n    }\r\n    Object.defineProperty(Node.prototype, \"$ready\", {\r\n        get: function () {\r\n            if (this.props.$ready === false) {\r\n                return false;\r\n            }\r\n            for (var i = 0; i < this.children.length; i++) {\r\n                var child = this.children[i];\r\n                if (child.$ready === false) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Node;\r\n}());\r\nexport { Node };\r\n","references":["/Users/fimplus/Desktop/revasReal/node_modules/@types/react/index.d.ts"],"dts":{"name":"/Users/fimplus/Desktop/revasReal/dist/types/revas/core/Node.d.ts","writeByteOrderMark":false,"text":"import { ReactNode } from 'react';\r\nexport declare class Frame {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    constructor(x?: number, y?: number, width?: number, height?: number);\r\n}\r\nexport declare class Node<T = any> {\r\n    readonly type: string;\r\n    props: NodeProps & T;\r\n    readonly children: Node[];\r\n    frame: Frame;\r\n    parent?: Node;\r\n    constructor(type: string, props: NodeProps & T);\r\n    get $ready(): boolean;\r\n}\r\nexport interface RevasTouch {\r\n    identifier: number;\r\n    x: number;\r\n    y: number;\r\n}\r\nexport declare type RevasTouchType = 'touchstart' | 'touchmove' | 'touchend';\r\nexport interface RevasTouchEvent {\r\n    type: RevasTouchType;\r\n    touches: {\r\n        [key: string]: RevasTouch;\r\n    };\r\n    timestamp: number;\r\n    [key: string]: any;\r\n}\r\nexport declare type RevasTouchEventListener = (event: RevasTouchEvent) => any;\r\nexport interface BaseProps {\r\n    children?: ReactNode;\r\n    style?: any | any[];\r\n    cache?: string | boolean;\r\n    forceCache?: boolean;\r\n}\r\nexport interface NodeProps extends BaseProps {\r\n    onTouchStart?: RevasTouchEventListener;\r\n    onTouchMove?: RevasTouchEventListener;\r\n    onTouchEnd?: RevasTouchEventListener;\r\n    onLayout?: (frame: Frame) => any;\r\n    pointerEvents?: 'auto' | 'none' | 'box-none';\r\n    $ready?: boolean;\r\n}\r\n"}}
