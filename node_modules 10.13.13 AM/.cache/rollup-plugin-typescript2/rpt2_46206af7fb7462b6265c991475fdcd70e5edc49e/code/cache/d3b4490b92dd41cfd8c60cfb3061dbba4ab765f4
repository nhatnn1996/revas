{"code":"import { __assign, __extends } from \"tslib\";\r\nimport * as React from 'react';\r\nimport * as imageLoader from './common/imageLoader';\r\nimport drawImage from './common/drawImage';\r\nvar DEFAULT_STYLE = { path: true };\r\nvar ImageView = /** @class */ (function (_super) {\r\n    __extends(ImageView, _super);\r\n    function ImageView() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            ready: false,\r\n        };\r\n        _this.onReady = function () {\r\n            _this.setState({ ready: true });\r\n        };\r\n        return _this;\r\n    }\r\n    ImageView.prototype.componentDidMount = function () {\r\n        if (this.props.src) {\r\n            imageLoader.get(this.props.src, this.onReady);\r\n        }\r\n    };\r\n    ImageView.prototype.componentDidUpdate = function (prev) {\r\n        if (prev.src !== this.props.src) {\r\n            this.setState({ ready: false });\r\n            if (prev.src) {\r\n                imageLoader.remove(prev.src, this.onReady);\r\n            }\r\n            if (this.props.src) {\r\n                imageLoader.get(this.props.src, this.onReady);\r\n            }\r\n        }\r\n    };\r\n    ImageView.prototype.componentWillUnmount = function () {\r\n        if (this.props.src) {\r\n            imageLoader.remove(this.props.src, this.onReady);\r\n        }\r\n    };\r\n    ImageView.prototype.render = function () {\r\n        return React.createElement('Image', __assign(__assign({ customDrawer: this.state.ready ? drawImage : void 0 }, this.props), { style: [DEFAULT_STYLE, this.props.style], $ready: this.state.ready }));\r\n    };\r\n    return ImageView;\r\n}(React.Component));\r\nexport default ImageView;\r\n","references":["/Users/fimplus/Desktop/revasReal/node_modules/@types/react/index.d.ts","/Users/fimplus/Desktop/revasReal/src/revas/components/common/imageLoader.ts","/Users/fimplus/Desktop/revasReal/src/revas/components/common/drawImage.ts","/Users/fimplus/Desktop/revasReal/src/revas/core/Node.ts"],"dts":{"name":"/Users/fimplus/Desktop/revasReal/dist/types/revas/components/Image.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport drawImage from './common/drawImage';\r\nimport { NodeProps } from '../core/Node';\r\nexport declare type ImageViewProps = {\r\n    src: string;\r\n} & NodeProps;\r\nexport default class ImageView extends React.Component<ImageViewProps> {\r\n    state: {\r\n        ready: boolean;\r\n    };\r\n    componentDidMount(): void;\r\n    componentDidUpdate(prev: any): void;\r\n    componentWillUnmount(): void;\r\n    onReady: () => void;\r\n    render(): React.ReactElement<{\r\n        style: any[];\r\n        $ready: boolean;\r\n        src: string;\r\n        onTouchStart?: import(\"../core/Node\").RevasTouchEventListener | undefined;\r\n        onTouchMove?: import(\"../core/Node\").RevasTouchEventListener | undefined;\r\n        onTouchEnd?: import(\"../core/Node\").RevasTouchEventListener | undefined;\r\n        onLayout?: ((frame: import(\"../core/Node\").Frame) => any) | undefined;\r\n        pointerEvents?: \"auto\" | \"none\" | \"box-none\" | undefined;\r\n        children?: React.ReactNode;\r\n        cache?: string | boolean | undefined;\r\n        forceCache?: boolean | undefined;\r\n        customDrawer: typeof drawImage | undefined;\r\n    }, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;\r\n}\r\n"}}
