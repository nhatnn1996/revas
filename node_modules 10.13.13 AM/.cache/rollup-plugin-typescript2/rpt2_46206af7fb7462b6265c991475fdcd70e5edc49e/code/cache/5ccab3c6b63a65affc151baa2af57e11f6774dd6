{"code":"import { adapter } from '../../core/utils';\r\nimport renderer from '../../core/reconciler';\r\nvar CachedImage = /** @class */ (function () {\r\n    function CachedImage(src) {\r\n        var _this = this;\r\n        this.src = src;\r\n        this.image = adapter.createImage();\r\n        this.targets = [];\r\n        this._ready = false;\r\n        this.onload = function () {\r\n            _this._ready = true;\r\n            renderer.batchedUpdates(function () {\r\n                _this.targets.forEach(function (target) { return target(_this.image); });\r\n            });\r\n        };\r\n        this.onerror = function () { };\r\n        if (!this.image) {\r\n            throw new Error('Revas: createImage must be initialized');\r\n        }\r\n        this.image.onload = this.onload;\r\n        this.image.onerror = this.onerror;\r\n        this.image.src = src;\r\n    }\r\n    Object.defineProperty(CachedImage.prototype, \"empty\", {\r\n        get: function () {\r\n            return this.targets.length === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachedImage.prototype.add = function (target) {\r\n        if (this.targets.indexOf(target) < 0) {\r\n            this.targets.push(target);\r\n            if (this._ready) {\r\n                target(this.image);\r\n            }\r\n        }\r\n    };\r\n    CachedImage.prototype.remove = function (target) {\r\n        var index = this.targets.indexOf(target);\r\n        this.targets.splice(index, 1);\r\n    };\r\n    return CachedImage;\r\n}());\r\nvar cache = new Map();\r\nexport function get(src, target) {\r\n    if (!cache.has(src)) {\r\n        cache.set(src, new CachedImage(src));\r\n    }\r\n    var cached = cache.get(src);\r\n    target && cached.add(target);\r\n    return cached.image;\r\n}\r\nexport function remove(src, target) {\r\n    if (cache.has(src)) {\r\n        var cached = cache.get(src);\r\n        cached.remove(target);\r\n        if (cached.empty) {\r\n            cache.delete(src);\r\n        }\r\n    }\r\n}\r\n","references":["/Users/fimplus/Desktop/revasReal/src/revas/core/utils.ts","/Users/fimplus/Desktop/revasReal/src/revas/core/reconciler.ts"],"dts":{"name":"/Users/fimplus/Desktop/revasReal/dist/types/revas/components/common/imageLoader.d.ts","writeByteOrderMark":false,"text":"export declare function get(src: string, target?: Function): HTMLImageElement;\r\nexport declare function remove(src: string, target: Function): void;\r\n"}}
