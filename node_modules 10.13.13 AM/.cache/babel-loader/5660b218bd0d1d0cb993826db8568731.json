{"ast":null,"code":"import _slicedToArray from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { createElement } from \"react\";\nimport renderer from \"../core/reconciler\";\nimport { noop } from \"../core/utils\";\nimport { Container } from \"../core/Container\";\nimport { RevasCanvas } from \"../core/Canvas\";\nimport { clearCache } from \"../core/offscreen\";\nimport { Root } from \"../components/Context\";\n\nfunction getNodePosition(node) {\n  var top = 0;\n  var left = 0;\n\n  while (node) {\n    top += node.offsetTop;\n    left += node.offsetLeft;\n    node = node.offsetParent;\n  }\n\n  return [top, left];\n}\n\nfunction createRevasTouchEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  var touches = {};\n  var type = e.type === \"touchcancel\" ? \"touchend\" : e.type;\n  Object.keys(e.changedTouches).forEach(function (key) {\n    var touch = e.changedTouches[key];\n\n    if (touch && touch.target) {\n      var _getNodePosition = getNodePosition(touch.target),\n          _getNodePosition2 = _slicedToArray(_getNodePosition, 2),\n          offsetTop = _getNodePosition2[0],\n          offsetLeft = _getNodePosition2[1];\n\n      touches[touch.identifier] = {\n        identifier: touch.identifier,\n        x: touch.clientX - offsetLeft,\n        y: touch.clientY - offsetTop\n      };\n    }\n  });\n  return {\n    type: type,\n    touches: touches,\n    timestamp: e.timeStamp || Date.now()\n  };\n}\n\nfunction createCanvas(parent, scale) {\n  var canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"style\", \"width: 100%; height: 100%;\");\n  parent.appendChild(canvas);\n  canvas.width = canvas.clientWidth * scale;\n  canvas.height = canvas.clientHeight * scale;\n  return canvas;\n}\n\nfunction createRoot(app, dom, canvas) {\n  return createElement(Root, {\n    clientWidth: dom.clientWidth,\n    clientHeight: dom.clientHeight,\n    deviceRatio: window.devicePixelRatio,\n    canvas: canvas\n  }, app);\n}\n\nfunction initTouch(dom, handler) {\n  dom.addEventListener(\"touchstart\", handler, false);\n  dom.addEventListener(\"touchmove\", handler, false);\n  dom.addEventListener(\"touchend\", handler, false);\n  dom.addEventListener(\"touchcancel\", handler, false);\n  dom.addEventListener(\"keypress\", handler, false);\n  dom.addEventListener(\"keyup\", handler, false);\n  dom.addEventListener(\"keydown\", handler, false);\n  return function () {\n    dom.removeEventListener(\"touchstart\", handler, false);\n    dom.removeEventListener(\"touchmove\", handler, false);\n    dom.removeEventListener(\"touchend\", handler, false);\n    dom.removeEventListener(\"touchcancel\", handler, false);\n    dom.removeEventListener(\"keypress\", handler, false);\n    dom.removeEventListener(\"keyup\", handler, false);\n    dom.removeEventListener(\"keydown\", handler, false);\n  };\n}\n\nexport function render(app, parent, parentComponent) {\n  var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  var scale = window.devicePixelRatio;\n  var dom = createCanvas(parent, scale);\n  var canvas = new RevasCanvas(dom.getContext(\"2d\"));\n  var container = new Container();\n  var destroyTouch = initTouch(dom, function (e) {\n    return container.handleTouch(createRevasTouchEvent(e));\n  });\n  var fiber = renderer.createContainer(container, false, false);\n  canvas.transform.scale(scale, scale);\n  renderer.updateContainer(createRoot(app, dom, canvas), fiber, parentComponent, callback);\n  return {\n    get $() {\n      return dom;\n    },\n\n    update: function update() {\n      var next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : app;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      dom.width = dom.clientWidth * scale;\n      dom.height = dom.clientHeight * scale;\n      clearCache();\n      canvas.transform.scale(scale, scale);\n      renderer.updateContainer(createRoot(next, dom, canvas), fiber, parentComponent, callback);\n    },\n    unmount: function unmount() {\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n      renderer.updateContainer(null, fiber, null, callback);\n      destroyTouch();\n      clearCache();\n      dom.remove();\n    }\n  };\n}","map":{"version":3,"sources":["/Users/fimplus/Desktop/revasReal/src/revas/web/render.ts"],"names":["createElement","renderer","noop","Container","RevasCanvas","clearCache","Root","getNodePosition","node","top","left","offsetTop","offsetLeft","offsetParent","createRevasTouchEvent","e","preventDefault","stopPropagation","touches","type","Object","keys","changedTouches","forEach","key","touch","target","identifier","x","clientX","y","clientY","timestamp","timeStamp","Date","now","createCanvas","parent","scale","canvas","document","setAttribute","appendChild","width","clientWidth","height","clientHeight","createRoot","app","dom","deviceRatio","window","devicePixelRatio","initTouch","handler","addEventListener","removeEventListener","render","parentComponent","callback","getContext","container","destroyTouch","handleTouch","fiber","createContainer","transform","updateContainer","$","update","next","unmount","remove"],"mappings":"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","sourcesContent":["import { Component, createElement } from \"react\";\nimport renderer from \"../core/reconciler\";\nimport { noop } from \"../core/utils\";\nimport { Container } from \"../core/Container\";\nimport { RevasTouch, RevasTouchEvent } from \"../core/Node\";\nimport { RevasCanvas } from \"../core/Canvas\";\nimport { clearCache } from \"../core/offscreen\";\nimport { Root } from \"../components/Context\";\n\nfunction getNodePosition(node: any): [number, number] {\n  let top = 0;\n  let left = 0;\n\n  while (node) {\n    top += node.offsetTop;\n    left += node.offsetLeft;\n    node = node.offsetParent;\n  }\n  return [top, left];\n}\n\nfunction createRevasTouchEvent(e: TouchEvent): RevasTouchEvent {\n  e.preventDefault();\n  e.stopPropagation();\n  const touches: { [key: number]: RevasTouch } = {};\n  const type: any = e.type === \"touchcancel\" ? \"touchend\" : e.type;\n  Object.keys(e.changedTouches).forEach((key: any) => {\n    const touch = e.changedTouches[key];\n    if (touch && touch.target) {\n      const [offsetTop, offsetLeft] = getNodePosition(touch.target);\n      touches[touch.identifier] = {\n        identifier: touch.identifier,\n        x: touch.clientX - offsetLeft,\n        y: touch.clientY - offsetTop,\n      };\n    }\n  });\n  return { type, touches, timestamp: e.timeStamp || Date.now() };\n}\n\nfunction createCanvas(parent: HTMLElement, scale: number) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"style\", \"width: 100%; height: 100%;\");\n  parent.appendChild(canvas);\n  canvas.width = canvas.clientWidth * scale;\n  canvas.height = canvas.clientHeight * scale;\n  return canvas;\n}\n\nfunction createRoot(app: React.ReactNode, dom: HTMLElement, canvas: RevasCanvas) {\n  return createElement(\n    Root,\n    {\n      clientWidth: dom.clientWidth,\n      clientHeight: dom.clientHeight,\n      deviceRatio: window.devicePixelRatio,\n      canvas,\n    },\n    app\n  );\n}\n\nfunction initTouch(dom: HTMLElement, handler: (e: any) => any) {\n  dom.addEventListener(\"touchstart\", handler, false);\n  dom.addEventListener(\"touchmove\", handler, false);\n  dom.addEventListener(\"touchend\", handler, false);\n  dom.addEventListener(\"touchcancel\", handler, false);\n  dom.addEventListener(\"keypress\", handler, false);\n  dom.addEventListener(\"keyup\", handler, false);\n  dom.addEventListener(\"keydown\", handler, false);\n  return () => {\n    dom.removeEventListener(\"touchstart\", handler, false);\n    dom.removeEventListener(\"touchmove\", handler, false);\n    dom.removeEventListener(\"touchend\", handler, false);\n    dom.removeEventListener(\"touchcancel\", handler, false);\n    dom.removeEventListener(\"keypress\", handler, false);\n    dom.removeEventListener(\"keyup\", handler, false);\n    dom.removeEventListener(\"keydown\", handler, false);\n  };\n}\n\nexport function render(app: React.ReactNode, parent: HTMLElement, parentComponent?: Component<any>, callback = noop) {\n  const scale = window.devicePixelRatio;\n  const dom = createCanvas(parent, scale);\n  const canvas = new RevasCanvas(dom.getContext(\"2d\")!);\n  const container = new Container();\n  const destroyTouch = initTouch(dom, (e) => container.handleTouch(createRevasTouchEvent(e)));\n  const fiber = renderer.createContainer(container, false, false);\n\n  canvas.transform.scale(scale, scale);\n  renderer.updateContainer(createRoot(app, dom, canvas), fiber, parentComponent, callback);\n\n  return {\n    get $() {\n      return dom;\n    },\n    update(next = app, callback = noop) {\n      dom.width = dom.clientWidth * scale;\n      dom.height = dom.clientHeight * scale;\n      clearCache();\n\n      canvas.transform.scale(scale, scale);\n      renderer.updateContainer(createRoot(next, dom, canvas), fiber, parentComponent, callback);\n    },\n    unmount(callback = noop) {\n      renderer.updateContainer(null, fiber, null, callback);\n      destroyTouch();\n      clearCache();\n      dom.remove();\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}