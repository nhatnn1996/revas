{"ast":null,"code":"import _defineProperty from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport Scroller from \"./common/Scroller\";\nimport { AnimatedValue } from \"../core/Animated\";\n\nvar ScrollView = /*#__PURE__*/function (_React$Component) {\n  _inherits(ScrollView, _React$Component);\n\n  var _super = _createSuper(ScrollView);\n\n  function ScrollView() {\n    var _this;\n\n    _classCallCheck(this, ScrollView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._height = -1;\n    _this._contentHeight = -1;\n    _this._width = -1;\n    _this._contentWidth = -1;\n    _this._innerStyle = {\n      translateX: new AnimatedValue(0),\n      translateY: new AnimatedValue(0),\n      position: \"absolute\",\n      animated: true\n    };\n    _this._offset = {\n      x: 0,\n      y: 0\n    };\n    _this._scroller = new Scroller(function (e) {\n      var _this$_offset = _this._offset,\n          _this$_offset$x = _this$_offset.x,\n          x = _this$_offset$x === void 0 ? 0 : _this$_offset$x,\n          _this$_offset$y = _this$_offset.y,\n          y = _this$_offset$y === void 0 ? 0 : _this$_offset$y;\n      _this.props.horizontal ? _this._innerStyle.translateX.setValue(x - e.x) : _this._innerStyle.translateY.setValue(y - e.y);\n    });\n\n    _this.handleKey = function (e) {\n      _this._scroller.touchStart(e);\n    };\n\n    _this._onLayout = function (frame) {\n      if (_this._width !== frame.width || _this._height !== frame.height) {\n        _this._height = frame.height;\n        _this._width = frame.width;\n\n        _this._checkLayout();\n\n        if (_this.props.paging) {\n          if (_this.props.horizontal) {\n            _this._scroller.pagingX = _this.props.paging === true ? frame.width : _this.props.paging;\n          } else {\n            _this._scroller.pagingY = _this.props.paging === true ? frame.height : _this.props.paging;\n          }\n        }\n      }\n\n      _this.props.onLayout && _this.props.onLayout(frame);\n    };\n\n    _this._onContentLayout = function (frame) {\n      var _this$_offset2 = _this._offset,\n          _this$_offset2$x = _this$_offset2.x,\n          x = _this$_offset2$x === void 0 ? 0 : _this$_offset2$x,\n          _this$_offset2$y = _this$_offset2.y,\n          y = _this$_offset2$y === void 0 ? 0 : _this$_offset2$y;\n      var width = frame.width + x;\n      var height = frame.height + y;\n\n      if (_this._contentWidth !== width || _this._contentHeight !== height) {\n        _this._contentHeight = height;\n        _this._contentWidth = width;\n\n        _this._checkLayout();\n      }\n    };\n\n    _this._checkLayout = function () {\n      var maxX = _this._contentWidth - _this._width;\n      var maxY = _this._contentHeight - _this._height;\n\n      if (maxX > 0 && maxX !== _this._scroller.maxX || maxY > 0 && maxY !== _this._scroller.maxY) {\n        _this._scroller.maxX = maxX;\n        _this._scroller.maxY = maxY;\n\n        _this._scroller.emit(\"none\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ScrollView, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._scroller.cancel();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"keydown\", this.handleKey); // window.addEventListener(\"keyup\", this.handleKey);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          horizontal = _this$props.horizontal,\n          offset = _this$props.offset,\n          others = _objectWithoutProperties(_this$props, [\"children\", \"horizontal\", \"offset\"]);\n\n      this._scroller.horizontal = horizontal;\n\n      if (offset) {\n        this._offset = offset;\n\n        this._scroller.emit(\"none\");\n      }\n\n      return React.createElement(\"Scrollable\", _objectSpread(_objectSpread({}, others), {}, {\n        onLayout: this._onLayout\n      }), React.createElement(\"ScrollContent\", {\n        onTouchStart: this._scroller.touchStart,\n        onTouchMove: this._scroller.touchMove,\n        onTouchEnd: this._scroller.touchEnd,\n        onLayout: this._onContentLayout,\n        style: [this._innerStyle, _defineProperty({\n          flexDirection: horizontal ? \"row\" : \"column\"\n        }, horizontal ? \"height\" : \"width\", \"100%\")],\n        children: children\n      }));\n    }\n  }]);\n\n  return ScrollView;\n}(React.Component);\n\nexport { ScrollView as default };","map":{"version":3,"sources":["/Users/fimplus/Desktop/revasReal/src/revas/components/ScrollView.ts"],"names":["React","Scroller","AnimatedValue","ScrollView","_height","_contentHeight","_width","_contentWidth","_innerStyle","translateX","translateY","position","animated","_offset","x","y","_scroller","e","props","horizontal","setValue","handleKey","touchStart","_onLayout","frame","width","height","_checkLayout","paging","pagingX","pagingY","onLayout","_onContentLayout","maxX","maxY","emit","cancel","window","addEventListener","children","offset","others","createElement","onTouchStart","onTouchMove","touchMove","onTouchEnd","touchEnd","style","flexDirection","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { NodeProps, Frame } from \"../core/Node\";\nimport Scroller, { RevasScrollEvent } from \"./common/Scroller\";\nimport { AnimatedValue } from \"../core/Animated\";\n\nexport type ScrollViewOffset = { x?: number; y?: number };\n\nexport type ScrollViewProps = {\n  horizontal?: boolean;\n  onScroll?: (e: RevasScrollEvent) => any;\n  onScrollStart?: (e: RevasScrollEvent) => any;\n  onScrollEnd?: (e: RevasScrollEvent) => any;\n  paging?: boolean | number;\n  offset?: ScrollViewOffset;\n} & NodeProps;\n\nexport default class ScrollView extends React.Component<ScrollViewProps> {\n  private _height = -1;\n  private _contentHeight = -1;\n  private _width = -1;\n  private _contentWidth = -1;\n  private _innerStyle = {\n    translateX: new AnimatedValue(0),\n    translateY: new AnimatedValue(0),\n    position: \"absolute\",\n    animated: true,\n  };\n  private _offset: ScrollViewOffset = { x: 0, y: 0 };\n  private _scroller = new Scroller((e) => {\n    const { x = 0, y = 0 } = this._offset;\n    this.props.horizontal ? this._innerStyle.translateX.setValue(x - e.x) : this._innerStyle.translateY.setValue(y - e.y);\n  });\n\n  componentWillUnmount() {\n    this._scroller.cancel();\n  }\n\n  handleKey = (e: KeyboardEvent) => {\n    this._scroller.touchStart(e);\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKey);\n    // window.addEventListener(\"keyup\", this.handleKey);\n  }\n\n  private _onLayout = (frame: Frame) => {\n    if (this._width !== frame.width || this._height !== frame.height) {\n      this._height = frame.height;\n      this._width = frame.width;\n      this._checkLayout();\n      if (this.props.paging) {\n        if (this.props.horizontal) {\n          this._scroller.pagingX = this.props.paging === true ? frame.width : this.props.paging;\n        } else {\n          this._scroller.pagingY = this.props.paging === true ? frame.height : this.props.paging;\n        }\n      }\n    }\n    this.props.onLayout && this.props.onLayout(frame);\n  };\n\n  private _onContentLayout = (frame: Frame) => {\n    const { x = 0, y = 0 } = this._offset;\n    const width = frame.width + x;\n    const height = frame.height + y;\n    if (this._contentWidth !== width || this._contentHeight !== height) {\n      this._contentHeight = height;\n      this._contentWidth = width;\n      this._checkLayout();\n    }\n  };\n\n  private _checkLayout = () => {\n    const maxX = this._contentWidth - this._width;\n    const maxY = this._contentHeight - this._height;\n    if ((maxX > 0 && maxX !== this._scroller.maxX) || (maxY > 0 && maxY !== this._scroller.maxY)) {\n      this._scroller.maxX = maxX;\n      this._scroller.maxY = maxY;\n      this._scroller.emit(\"none\");\n    }\n  };\n\n  render() {\n    const { children, horizontal, offset, ...others } = this.props;\n\n    this._scroller.horizontal = horizontal;\n\n    if (offset) {\n      this._offset = offset;\n      this._scroller.emit(\"none\");\n    }\n\n    return React.createElement(\n      \"Scrollable\",\n      { ...others, onLayout: this._onLayout },\n      React.createElement(\"ScrollContent\", {\n        onTouchStart: this._scroller.touchStart,\n        onTouchMove: this._scroller.touchMove,\n        onTouchEnd: this._scroller.touchEnd,\n        onLayout: this._onContentLayout,\n        style: [\n          this._innerStyle,\n          {\n            flexDirection: horizontal ? \"row\" : \"column\",\n            [horizontal ? \"height\" : \"width\"]: \"100%\",\n          },\n        ],\n        children,\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}