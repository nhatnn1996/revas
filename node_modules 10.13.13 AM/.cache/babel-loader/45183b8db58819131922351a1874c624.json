{"ast":null,"code":"import _inherits from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport bezier from 'bezier-easing';\nexport var AnimatedNode = /*#__PURE__*/function () {\n  function AnimatedNode() {\n    _classCallCheck(this, AnimatedNode);\n  }\n\n  _createClass(AnimatedNode, [{\n    key: \"interpolate\",\n    value: function interpolate(inRange, outRange) {\n      var ease = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Easing.linear;\n      return new AnimatedInterpolate(this, inRange, outRange, ease);\n    }\n  }]);\n\n  return AnimatedNode;\n}();\nexport var AnimatedValue = /*#__PURE__*/function (_AnimatedNode) {\n  _inherits(AnimatedValue, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedValue);\n\n  // TODO: tempor\n  function AnimatedValue(_value) {\n    var _this;\n\n    _classCallCheck(this, AnimatedValue);\n\n    _this = _super.call(this);\n    _this._value = _value;\n    _this._observer = void 0;\n    return _this;\n  }\n\n  _createClass(AnimatedValue, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this._value = value;\n\n      if (this._observer) {\n        var _observer = this._observer;\n        this._observer = void 0;\n\n        _observer();\n      }\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(observer) {\n      if (observer) {\n        this._observer = observer;\n      }\n\n      return this._value;\n    }\n  }]);\n\n  return AnimatedValue;\n}(AnimatedNode);\nexport var AnimatedInterpolate = /*#__PURE__*/function (_AnimatedNode2) {\n  _inherits(AnimatedInterpolate, _AnimatedNode2);\n\n  var _super2 = _createSuper(AnimatedInterpolate);\n\n  function AnimatedInterpolate(source, inRange, outRange, ease) {\n    var _this2;\n\n    _classCallCheck(this, AnimatedInterpolate);\n\n    _this2 = _super2.call(this);\n    _this2.source = source;\n    _this2.inRange = inRange;\n    _this2.outRange = outRange;\n    _this2.ease = ease;\n    return _this2;\n  } // TODO: Check inRange is asc\n\n\n  _createClass(AnimatedInterpolate, [{\n    key: \"getValue\",\n    value: function getValue(observer) {\n      var value = this.source.getValue(observer);\n      var len = this.inRange.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        var x1 = this.inRange[i];\n\n        if (value < x1 || i === len - 1) {\n          var x0 = this.inRange[i - 1];\n          var y0 = this.outRange[i - 1];\n          var y1 = this.outRange[i];\n          var percent = (value - x0) / (x1 - x0);\n          var result = (y1 - y0) * this.ease(percent) + y0;\n          return result;\n        }\n      }\n\n      return 0;\n    }\n  }]);\n\n  return AnimatedInterpolate;\n}(AnimatedNode);\nexport var AnimatedTiming = /*#__PURE__*/function () {\n  function AnimatedTiming(value, config) {\n    var _this3 = this;\n\n    _classCallCheck(this, AnimatedTiming);\n\n    this.value = value;\n    this.config = config;\n    this._startTime = 0;\n    this._startValue = 0;\n    this._onEnd = void 0;\n    this._next = 0;\n\n    this._loop = function () {\n      var duration = Date.now() - _this3._startTime;\n\n      if (duration < _this3.config.duration) {\n        var percent = duration / _this3.config.duration;\n\n        var inc = _this3._ease(percent) * (_this3.config.to - _this3._startValue);\n\n        _this3.value.setValue(_this3._startValue + inc);\n\n        _this3._next = requestAnimationFrame(_this3._loop);\n      } else {\n        _this3.value.setValue(_this3.config.to);\n\n        _this3._onEnd && requestAnimationFrame(_this3._onEnd);\n      }\n    };\n  }\n\n  _createClass(AnimatedTiming, [{\n    key: \"start\",\n    value: function start(onEnd) {\n      this._startTime = Date.now();\n      this._startValue = this.value.getValue();\n      this._onEnd = onEnd;\n      this._next = requestAnimationFrame(this._loop);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      cancelAnimationFrame(this._next);\n      return this;\n    }\n  }, {\n    key: \"promise\",\n    value: function promise() {\n      var _this4 = this;\n\n      return new Promise(function (resolve) {\n        return _this4._onEnd = resolve;\n      });\n    }\n  }, {\n    key: \"_ease\",\n    get: function get() {\n      return this.config.ease || Easing.linear;\n    }\n  }]);\n\n  return AnimatedTiming;\n}();\nexport function timing(value, config) {\n  return new AnimatedTiming(value, config);\n}\nvar ease;\n\nfunction getEase() {\n  if (!ease) {\n    ease = bezier(0.42, 0, 1, 1);\n  }\n\n  return ease;\n}\n\nexport var Easing = {\n  linear: function linear(t) {\n    return t;\n  },\n  ease: function ease(t) {\n    return getEase()(t);\n  },\n\n  /**\n   * Runs an easing function forwards.\n   */\n  in: function _in() {\n    var easing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getEase();\n    return easing;\n  },\n\n  /**\n   * Runs an easing function backwards.\n   */\n  out: function out() {\n    var easing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getEase();\n    return function (t) {\n      return 1 - easing(1 - t);\n    };\n  },\n\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  inOut: function inOut() {\n    var easing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getEase();\n    return function (t) {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  },\n  bounce: function bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      var _t = t - 1.5 / 2.75;\n\n      return 7.5625 * _t * _t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      var _t2 = t - 2.25 / 2.75;\n\n      return 7.5625 * _t2 * _t2 + 0.9375;\n    }\n\n    var t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  },\n  elastic: function elastic() {\n    var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var p = bounciness * Math.PI;\n    return function (t) {\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n    };\n  }\n};","map":{"version":3,"sources":["/Users/fimplus/Desktop/revasReal/src/revas/core/Animated.ts"],"names":["bezier","AnimatedNode","inRange","outRange","ease","Easing","linear","AnimatedInterpolate","AnimatedValue","_value","_observer","value","observer","source","getValue","len","length","i","x1","x0","y0","y1","percent","result","AnimatedTiming","config","_startTime","_startValue","_onEnd","_next","_loop","duration","Date","now","inc","_ease","to","setValue","requestAnimationFrame","onEnd","cancelAnimationFrame","Promise","resolve","timing","getEase","t","in","easing","out","inOut","bounce","t2","elastic","bounciness","p","Math","PI","pow","cos"],"mappings":"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","sourcesContent":["import bezier from 'bezier-easing';\n\nexport abstract class AnimatedNode {\n  abstract getValue(observer?: Function): number;\n\n  interpolate(inRange: number[], outRange: number[], ease = Easing.linear): AnimatedInterpolate {\n    return new AnimatedInterpolate(this, inRange, outRange, ease);\n  }\n}\n\nexport class AnimatedValue extends AnimatedNode {\n  // TODO: tempor\n  private _observer?: Function;\n\n  constructor(private _value: number) {\n    super();\n  }\n\n  setValue(value: number) {\n    this._value = value;\n    if (this._observer) {\n      const observer = this._observer;\n      this._observer = void 0;\n      observer();\n    }\n  }\n\n  getValue(observer?: Function) {\n    if (observer) {\n      this._observer = observer;\n    }\n    return this._value;\n  }\n}\n\nexport class AnimatedInterpolate extends AnimatedNode {\n  constructor(\n    private source: AnimatedNode,\n    private inRange: number[],\n    private outRange: number[],\n    private ease: (t: number) => number\n  ) {\n    super();\n  }\n  // TODO: Check inRange is asc\n\n  getValue(observer?: Function) {\n    const value = this.source.getValue(observer);\n    const len = this.inRange.length;\n    let i = 1;\n    for (; i < len; i++) {\n      const x1 = this.inRange[i];\n      if (value < x1 || i === len - 1) {\n        const x0 = this.inRange[i - 1];\n        const y0 = this.outRange[i - 1];\n        const y1 = this.outRange[i];\n        const percent = (value - x0) / (x1 - x0);\n        const result = (y1 - y0) * this.ease(percent) + y0;\n        return result;\n      }\n    }\n    return 0;\n  }\n}\n\nexport type TimingConfig = {\n  to: number;\n  duration: number;\n  ease?: (t: number) => number;\n};\n\nexport class AnimatedTiming {\n  private _startTime = 0;\n  private _startValue = 0;\n  private _onEnd?: Function;\n  private _next = 0;\n\n  constructor(private value: AnimatedValue, private config: TimingConfig) {}\n\n  private get _ease() {\n    return this.config.ease || Easing.linear;\n  }\n\n  start(onEnd?: Function) {\n    this._startTime = Date.now();\n    this._startValue = this.value.getValue();\n    this._onEnd = onEnd;\n    this._next = requestAnimationFrame(this._loop);\n    return this;\n  }\n\n  stop() {\n    cancelAnimationFrame(this._next);\n    return this;\n  }\n\n  promise() {\n    return new Promise(resolve => (this._onEnd = resolve));\n  }\n\n  private _loop = () => {\n    const duration = Date.now() - this._startTime;\n    if (duration < this.config.duration) {\n      const percent = duration / this.config.duration;\n      const inc = this._ease(percent) * (this.config.to - this._startValue);\n      this.value.setValue(this._startValue + inc);\n      this._next = requestAnimationFrame(this._loop);\n    } else {\n      this.value.setValue(this.config.to);\n      this._onEnd && requestAnimationFrame(this._onEnd as any);\n    }\n  };\n}\n\nexport function timing(value: AnimatedValue, config: TimingConfig) {\n  return new AnimatedTiming(value, config);\n}\n\nlet ease: (t: number) => number;\n\nfunction getEase() {\n  if (!ease) {\n    ease = bezier(0.42, 0, 1, 1);\n  }\n  return ease;\n}\n\nexport const Easing = {\n  linear(t: number) {\n    return t;\n  },\n\n  ease(t: number): number {\n    return getEase()(t);\n  },\n  /**\n   * Runs an easing function forwards.\n   */\n  in(easing = getEase()): (t: number) => number {\n    return easing;\n  },\n\n  /**\n   * Runs an easing function backwards.\n   */\n  out(easing = getEase()): (t: number) => number {\n    return t => 1 - easing(1 - t);\n  },\n\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  inOut(easing = getEase()): (t: number) => number {\n    return t => {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  },\n  bounce(t: number): number {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      const t2 = t - 1.5 / 2.75;\n      return 7.5625 * t2 * t2 + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      const t2 = t - 2.25 / 2.75;\n      return 7.5625 * t2 * t2 + 0.9375;\n    }\n\n    const t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  },\n  elastic(bounciness = 1): (t: number) => number {\n    const p = bounciness * Math.PI;\n    return t => 1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}