{"ast":null,"code":"import _toConsumableArray from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport function noop() {}\nexport var EMPTY_OBJECT = Object.freeze({});\nexport var EMPTY_ARRAY = Object.freeze([]);\nexport function flatten(array) {\n  var flattend = [];\n\n  (function flat(array) {\n    array.forEach(function (el) {\n      if (Array.isArray(el)) {\n        flat(el);\n      } else {\n        flattend.push(el);\n      }\n    });\n  })(array);\n\n  return flattend;\n}\nexport var now = typeof performance === 'object' && typeof performance.now === 'function' ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\n\nfunction observeAnimatedValue(value, observer, defaultValue) {\n  if (value === undefined) {\n    return defaultValue;\n  }\n\n  if (value && value.getValue) {\n    return value.getValue(observer);\n  }\n\n  return value;\n}\n\nexport function applyAnimated(style, callback) {\n  if (style.animated) {\n    // Animated Styles\n    for (var key in style) {\n      style[key] = observeAnimatedValue(style[key], callback);\n    }\n  }\n\n  return style;\n}\nexport function getMergedStyleFromNode(node, callback) {\n  var _node$props$style = node.props.style,\n      style = _node$props$style === void 0 ? EMPTY_ARRAY : _node$props$style;\n  return applyAnimated(Object.assign.apply(Object, [{}].concat(_toConsumableArray(flatten([style])))), callback);\n}\nexport function getFrameFromNode(node) {\n  var frame = node.frame;\n  return frame;\n}\nexport function sortByZIndexAscending(a, b) {\n  var styleA = getMergedStyleFromNode(a);\n  var styleB = getMergedStyleFromNode(b);\n  return (styleA.zIndex || 0) - (styleB.zIndex || 0);\n}\nexport function clamp(n, min, max) {\n  return Math.min(Math.max(n, min), max);\n}\nvar ASTRAL_RANGE = /\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g;\nvar WORD_RANGE = /\\w+|\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g;\nexport function getChars(str) {\n  return str.match(ASTRAL_RANGE) || EMPTY_ARRAY;\n}\nexport function getWords(str) {\n  return str.match(WORD_RANGE) || EMPTY_ARRAY;\n}\nexport function setShadow(canvas, color, x, y, blur) {\n  if (color) {\n    var _ctx = canvas.context;\n    var shadowBlur = _ctx.shadowBlur,\n        shadowColor = _ctx.shadowColor,\n        shadowOffsetX = _ctx.shadowOffsetX,\n        shadowOffsetY = _ctx.shadowOffsetY;\n    _ctx.shadowBlur = blur;\n    _ctx.shadowColor = color;\n    _ctx.shadowOffsetX = x;\n    _ctx.shadowOffsetY = y;\n    return function resetShadow() {\n      _ctx.shadowBlur = shadowBlur;\n      _ctx.shadowColor = shadowColor;\n      _ctx.shadowOffsetX = shadowOffsetX;\n      _ctx.shadowOffsetY = shadowOffsetY;\n    };\n  }\n\n  return noop;\n}\nexport function pushOpacity(canvas, opacity) {\n  if (opacity !== null && opacity < 1 && opacity >= 0) {\n    var cachedOpacity = canvas.context.globalAlpha || 1;\n    canvas.context.globalAlpha = cachedOpacity * opacity;\n    return function popOpacity() {\n      canvas.context.globalAlpha = cachedOpacity;\n    };\n  }\n\n  return noop;\n}\nexport var adapter = {\n  createImage: function createImage() {\n    return new Image();\n  }\n};","map":{"version":3,"sources":["/Users/fimplus/Desktop/revasReal/src/revas/core/utils.ts"],"names":["noop","EMPTY_OBJECT","Object","freeze","EMPTY_ARRAY","flatten","array","flattend","flat","forEach","el","Array","isArray","push","now","performance","Date","observeAnimatedValue","value","observer","defaultValue","undefined","getValue","applyAnimated","style","callback","animated","key","getMergedStyleFromNode","node","props","assign","getFrameFromNode","frame","sortByZIndexAscending","a","b","styleA","styleB","zIndex","clamp","n","min","max","Math","ASTRAL_RANGE","WORD_RANGE","getChars","str","match","getWords","setShadow","canvas","color","x","y","blur","ctx","context","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","resetShadow","pushOpacity","opacity","cachedOpacity","globalAlpha","popOpacity","adapter","createImage","Image"],"mappings":"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","sourcesContent":["import { Node } from './Node';\nimport { RevasCanvas } from './Canvas';\n\nexport function noop(): any {}\nexport const EMPTY_OBJECT: any = Object.freeze({});\nexport const EMPTY_ARRAY: any[] = Object.freeze([]) as any;\n\nexport function flatten(array: any[]) {\n  const flattend: any[] = [];\n  (function flat(array) {\n    array.forEach(function (el) {\n      if (Array.isArray(el)) {\n        flat(el);\n      } else {\n        flattend.push(el);\n      }\n    });\n  })(array);\n  return flattend;\n}\n\nexport const now =\n  typeof performance === 'object' && typeof performance.now === 'function' ? () => performance.now() : () => Date.now();\n\nfunction observeAnimatedValue(value: any, observer?: Function, defaultValue?: number) {\n  if (value === undefined) {\n    return defaultValue!;\n  }\n  if (value && value.getValue) {\n    return value.getValue(observer);\n  }\n  return value;\n}\n\nexport function applyAnimated(style: any, callback?: Function) {\n  if (style.animated) {\n    // Animated Styles\n    for (const key in style) {\n      style[key] = observeAnimatedValue(style[key], callback);\n    }\n  }\n  return style;\n}\n\nexport function getMergedStyleFromNode(node: Node, callback?: Function) {\n  const {\n    props: { style = EMPTY_ARRAY },\n  } = node;\n  return applyAnimated(Object.assign({}, ...flatten([style])), callback);\n}\n\nexport function getFrameFromNode(node: Node) {\n  const { frame } = node;\n  return frame;\n}\n\nexport function sortByZIndexAscending(a: Node, b: Node) {\n  const styleA = getMergedStyleFromNode(a);\n  const styleB = getMergedStyleFromNode(b);\n  return (styleA.zIndex || 0) - (styleB.zIndex || 0);\n}\n\nexport function clamp(n: number, min: number, max: number) {\n  return Math.min(Math.max(n, min), max);\n}\n\nconst ASTRAL_RANGE = /\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g;\nconst WORD_RANGE = /\\w+|\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g;\n\nexport function getChars(str: string): readonly string[] {\n  return str.match(ASTRAL_RANGE) || EMPTY_ARRAY;\n}\n\nexport function getWords(str: string): readonly string[] {\n  return str.match(WORD_RANGE) || EMPTY_ARRAY;\n}\n\nexport function setShadow(canvas: RevasCanvas, color: string, x: number, y: number, blur: number) {\n  if (color) {\n    const { context: ctx } = canvas;\n    const { shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY } = ctx;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = color;\n    ctx.shadowOffsetX = x;\n    ctx.shadowOffsetY = y;\n    return function resetShadow() {\n      ctx.shadowBlur = shadowBlur;\n      ctx.shadowColor = shadowColor;\n      ctx.shadowOffsetX = shadowOffsetX;\n      ctx.shadowOffsetY = shadowOffsetY;\n    };\n  }\n  return noop;\n}\n\nexport function pushOpacity(canvas: RevasCanvas, opacity: number) {\n  if (opacity !== null && opacity < 1 && opacity >= 0) {\n    const cachedOpacity = canvas.context.globalAlpha || 1;\n    canvas.context.globalAlpha = cachedOpacity * opacity;\n    return function popOpacity() {\n      canvas.context.globalAlpha = cachedOpacity;\n    };\n  }\n  return noop;\n}\n\nexport type RevasAdapter = {\n  createImage: () => HTMLImageElement;\n  createOffscreenCanvas?: (width: number, height: number) => RevasCanvas;\n  resetOffscreenCanvas?: (ctx: RevasCanvas, width: number, height: number) => RevasCanvas;\n};\n\nexport const adapter: RevasAdapter = {\n  createImage: () => new Image(),\n};\n"]},"metadata":{},"sourceType":"module"}