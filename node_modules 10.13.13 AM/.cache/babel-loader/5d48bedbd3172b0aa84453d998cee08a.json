{"ast":null,"code":"import _toConsumableArray from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { flatten } from '../utils';\nimport { promise, yoga as Yoga } from './init';\n\nfunction funcName(key) {\n  return \"set\".concat(key[0].toUpperCase()).concat(key.substr(1));\n}\n\nfunction checkAndRun(yoga, key) {\n  if (yoga[key]) {\n    for (var _len = arguments.length, values = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      values[_key - 2] = arguments[_key];\n    }\n\n    yoga[key].apply(yoga, values);\n  } else {\n    throw new Error(\"ReCanvas: No Such Style Func - \".concat(key));\n  }\n}\n\nfunction parseValue(func, value) {\n  if (typeof value === 'number') {\n    return [func, value];\n  } else if (value === 'auto') {\n    return [\"\".concat(func, \"Auto\")];\n  } else if (value.endsWith('%')) {\n    return [\"\".concat(func, \"Percent\"), Number(value.slice(0, -1))];\n  } else {\n    throw new Error(\"ReCanvas: No Such Style Value - \".concat(value));\n  }\n}\n\nfunction parseEnum(func, enums, value) {\n  if (enums[value] !== undefined) {\n    return [func, enums[value]];\n  } else {\n    throw new Error(\"ReCanvas: No Such Style Value - \".concat(value));\n  }\n}\n\nfunction parseEdge(func, edge, value) {\n  if (typeof value === 'number') {\n    return [func, edge, value];\n  } else if (value === 'auto') {\n    return [\"\".concat(func, \"Auto\"), edge];\n  } else if (value.endsWith('%')) {\n    return [\"\".concat(func, \"Percent\"), edge, Number(value.slice(0, -1))];\n  } else {\n    throw new Error(\"ReCanvas: No Such Style Value - \".concat(value));\n  }\n}\n\nvar STYLE_MAP = {};\n\nfunction init() {\n  var ALIGN_ENUM = {\n    auto: Yoga.ALIGN_AUTO,\n    baseline: Yoga.ALIGN_BASELINE,\n    center: Yoga.ALIGN_CENTER,\n    'flex-end': Yoga.ALIGN_FLEX_END,\n    'flex-start': Yoga.ALIGN_FLEX_START,\n    'space-around': Yoga.ALIGN_SPACE_AROUND,\n    'space-between': Yoga.ALIGN_SPACE_BETWEEN,\n    stretch: Yoga.ALIGN_STRETCH\n  };\n  var AVAILABLE = {\n    VALUE: ['flex', 'width', 'height', 'minWidth', 'maxWidth', 'minHeight', 'maxHeight', 'flexGrow', 'flexShrink', 'aspectRatio'],\n    ENUM: [{\n      key: 'justifyContent',\n      enum: {\n        center: Yoga.JUSTIFY_CENTER,\n        'flex-end': Yoga.JUSTIFY_FLEX_END,\n        'flex-start': Yoga.JUSTIFY_FLEX_START,\n        'space-around': Yoga.JUSTIFY_SPACE_AROUND,\n        'space-between': Yoga.JUSTIFY_SPACE_BETWEEN,\n        'space-evenly': Yoga.JUSTIFY_SPACE_EVENLY\n      }\n    }, {\n      key: 'alignItems',\n      enum: ALIGN_ENUM\n    }, {\n      key: 'alignSelf',\n      enum: ALIGN_ENUM\n    }, {\n      key: 'alignContent',\n      enum: ALIGN_ENUM\n    }, {\n      key: 'flexWrap',\n      enum: {\n        'no-wrap': Yoga.WRAP_NO_WRAP,\n        wrap: Yoga.WRAP_WRAP,\n        'wrap-reverse': Yoga.WRAP_WRAP_REVERSE\n      }\n    }, {\n      key: 'flexDirection',\n      enum: {\n        column: Yoga.FLEX_DIRECTION_COLUMN,\n        'column-reverse': Yoga.FLEX_DIRECTION_COLUMN_REVERSE,\n        count: Yoga.FLEX_DIRECTION_COUNT,\n        row: Yoga.FLEX_DIRECTION_ROW,\n        'row-reverse': Yoga.FLEX_DIRECTION_ROW_REVERSE\n      }\n    }, {\n      key: 'position',\n      remap: 'positionType',\n      enum: {\n        relative: Yoga.POSITION_TYPE_RELATIVE,\n        absolute: Yoga.POSITION_TYPE_ABSOLUTE,\n        count: Yoga.POSITION_TYPE_COUNT\n      }\n    }],\n    EDGE: [{\n      key: 'padding',\n      remap: 'padding',\n      edge: Yoga.EDGE_ALL\n    }, {\n      key: 'paddingLeft',\n      remap: 'padding',\n      edge: Yoga.EDGE_LEFT\n    }, {\n      key: 'paddingRight',\n      remap: 'padding',\n      edge: Yoga.EDGE_RIGHT\n    }, {\n      key: 'paddingTop',\n      remap: 'padding',\n      edge: Yoga.EDGE_TOP\n    }, {\n      key: 'paddingBottom',\n      remap: 'padding',\n      edge: Yoga.EDGE_BOTTOM\n    }, {\n      key: 'left',\n      remap: 'position',\n      edge: Yoga.EDGE_LEFT\n    }, {\n      key: 'right',\n      remap: 'position',\n      edge: Yoga.EDGE_RIGHT\n    }, {\n      key: 'top',\n      remap: 'position',\n      edge: Yoga.EDGE_TOP\n    }, {\n      key: 'bottom',\n      remap: 'position',\n      edge: Yoga.EDGE_BOTTOM\n    }, {\n      key: 'margin',\n      remap: 'margin',\n      edge: Yoga.EDGE_ALL\n    }, {\n      key: 'marginLeft',\n      remap: 'margin',\n      edge: Yoga.EDGE_LEFT\n    }, {\n      key: 'marginRight',\n      remap: 'margin',\n      edge: Yoga.EDGE_RIGHT\n    }, {\n      key: 'marginTop',\n      remap: 'margin',\n      edge: Yoga.EDGE_TOP\n    }, {\n      key: 'marginBottom',\n      remap: 'margin',\n      edge: Yoga.EDGE_BOTTOM\n    }, {\n      key: 'borderWidth',\n      remap: 'border',\n      edge: Yoga.EDGE_ALL\n    }, {\n      key: 'borderLeftWidth',\n      remap: 'border',\n      edge: Yoga.EDGE_LEFT\n    }, {\n      key: 'borderRightWidth',\n      remap: 'border',\n      edge: Yoga.EDGE_RIGHT\n    }, {\n      key: 'borderTopWidth',\n      remap: 'border',\n      edge: Yoga.EDGE_TOP\n    }, {\n      key: 'borderBottomWidth',\n      remap: 'border',\n      edge: Yoga.EDGE_BOTTOM\n    }]\n  };\n  AVAILABLE.VALUE.forEach(function (key) {\n    var func = funcName(key);\n\n    STYLE_MAP[key] = function (value) {\n      return parseValue(func, value);\n    };\n  });\n  AVAILABLE.ENUM.forEach(function (item) {\n    var func = funcName(item.remap || item.key);\n    var enums = item.enum;\n\n    STYLE_MAP[item.key] = function (value) {\n      return parseEnum(func, enums, value);\n    };\n  });\n  AVAILABLE.EDGE.forEach(function (item) {\n    var func = funcName(item.remap);\n    var edge = item.edge;\n\n    STYLE_MAP[item.key] = function (value) {\n      return parseEdge(func, edge, value);\n    };\n  });\n}\n\npromise.then(init); // function _apply(yoga: Yoga.YogaNode, style: any) {\n//   for (const key in style) {\n//     const func = STYLE_MAP[key]\n//     func && checkAndRun(yoga, ...func(style[key]))\n//   }\n// }\n\nvar cache = new WeakMap();\n\nfunction _apply(yoga, style) {\n  if (style) {\n    if (!cache.has(style)) {\n      var _styles = [];\n\n      for (var _key2 in style) {\n        var func = STYLE_MAP[_key2];\n        func && _styles.push(func(style[_key2]));\n      }\n\n      cache.set(style, _styles);\n    }\n\n    var styles = cache.get(style);\n\n    for (var i = 0; i < styles.length; i++) {\n      checkAndRun.apply(void 0, [yoga].concat(_toConsumableArray(styles[i])));\n    }\n  }\n}\n\nexport default function apply(yoga, style) {\n  if (style) {\n    flatten([style]).forEach(function (s) {\n      return _apply(yoga, s);\n    });\n  }\n}","map":{"version":3,"sources":["/Users/fimplus/Desktop/revasReal/src/revas/core/yoga-layout/style.ts"],"names":["flatten","promise","yoga","Yoga","funcName","key","toUpperCase","substr","checkAndRun","values","Error","parseValue","func","value","endsWith","Number","slice","parseEnum","enums","undefined","parseEdge","edge","STYLE_MAP","init","ALIGN_ENUM","auto","ALIGN_AUTO","baseline","ALIGN_BASELINE","center","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_FLEX_START","ALIGN_SPACE_AROUND","ALIGN_SPACE_BETWEEN","stretch","ALIGN_STRETCH","AVAILABLE","VALUE","ENUM","enum","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_FLEX_START","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_EVENLY","WRAP_NO_WRAP","wrap","WRAP_WRAP","WRAP_WRAP_REVERSE","column","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","count","FLEX_DIRECTION_COUNT","row","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","remap","relative","POSITION_TYPE_RELATIVE","absolute","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_COUNT","EDGE","EDGE_ALL","EDGE_LEFT","EDGE_RIGHT","EDGE_TOP","EDGE_BOTTOM","forEach","item","then","cache","WeakMap","_apply","style","has","_styles","push","set","styles","get","i","length","apply","s"],"mappings":"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","sourcesContent":["import type { YogaNode } from 'yoga-layout-wasm/asm';\nimport { flatten } from '../utils';\nimport { promise, yoga as Yoga } from './init';\n\nfunction funcName(key: string) {\n  return `set${key[0].toUpperCase()}${key.substr(1)}`;\n}\n\ntype StyleParams = [string, any?, any?];\n\nfunction checkAndRun(yoga: any, key: string, ...values: any[]) {\n  if (yoga[key]) {\n    yoga[key](...values);\n  } else {\n    throw new Error(`ReCanvas: No Such Style Func - ${key}`);\n  }\n}\n\nfunction parseValue(func: string, value: string | number): StyleParams {\n  if (typeof value === 'number') {\n    return [func, value];\n  } else if (value === 'auto') {\n    return [`${func}Auto`];\n  } else if (value.endsWith('%')) {\n    return [`${func}Percent`, Number(value.slice(0, -1))];\n  } else {\n    throw new Error(`ReCanvas: No Such Style Value - ${value}`);\n  }\n}\n\nfunction parseEnum(func: string, enums: any, value: string): StyleParams {\n  if (enums[value] !== undefined) {\n    return [func, enums[value]];\n  } else {\n    throw new Error(`ReCanvas: No Such Style Value - ${value}`);\n  }\n}\n\nfunction parseEdge(func: string, edge: number, value: string | number): StyleParams {\n  if (typeof value === 'number') {\n    return [func, edge, value];\n  } else if (value === 'auto') {\n    return [`${func}Auto`, edge];\n  } else if (value.endsWith('%')) {\n    return [`${func}Percent`, edge, Number(value.slice(0, -1))];\n  } else {\n    throw new Error(`ReCanvas: No Such Style Value - ${value}`);\n  }\n}\n\nconst STYLE_MAP: { [key: string]: (value: any) => StyleParams } = {};\n\nfunction init() {\n  const ALIGN_ENUM = {\n    auto: Yoga.ALIGN_AUTO,\n    baseline: Yoga.ALIGN_BASELINE,\n    center: Yoga.ALIGN_CENTER,\n    'flex-end': Yoga.ALIGN_FLEX_END,\n    'flex-start': Yoga.ALIGN_FLEX_START,\n    'space-around': Yoga.ALIGN_SPACE_AROUND,\n    'space-between': Yoga.ALIGN_SPACE_BETWEEN,\n    stretch: Yoga.ALIGN_STRETCH,\n  };\n\n  const AVAILABLE = {\n    VALUE: [\n      'flex',\n      'width',\n      'height',\n      'minWidth',\n      'maxWidth',\n      'minHeight',\n      'maxHeight',\n      'flexGrow',\n      'flexShrink',\n      'aspectRatio',\n    ],\n    ENUM: [\n      {\n        key: 'justifyContent',\n        enum: {\n          center: Yoga.JUSTIFY_CENTER,\n          'flex-end': Yoga.JUSTIFY_FLEX_END,\n          'flex-start': Yoga.JUSTIFY_FLEX_START,\n          'space-around': Yoga.JUSTIFY_SPACE_AROUND,\n          'space-between': Yoga.JUSTIFY_SPACE_BETWEEN,\n          'space-evenly': Yoga.JUSTIFY_SPACE_EVENLY,\n        },\n      },\n      { key: 'alignItems', enum: ALIGN_ENUM },\n      { key: 'alignSelf', enum: ALIGN_ENUM },\n      { key: 'alignContent', enum: ALIGN_ENUM },\n      {\n        key: 'flexWrap',\n        enum: {\n          'no-wrap': Yoga.WRAP_NO_WRAP,\n          wrap: Yoga.WRAP_WRAP,\n          'wrap-reverse': Yoga.WRAP_WRAP_REVERSE,\n        },\n      },\n      {\n        key: 'flexDirection',\n        enum: {\n          column: Yoga.FLEX_DIRECTION_COLUMN,\n          'column-reverse': Yoga.FLEX_DIRECTION_COLUMN_REVERSE,\n          count: Yoga.FLEX_DIRECTION_COUNT,\n          row: Yoga.FLEX_DIRECTION_ROW,\n          'row-reverse': Yoga.FLEX_DIRECTION_ROW_REVERSE,\n        },\n      },\n      {\n        key: 'position',\n        remap: 'positionType',\n        enum: {\n          relative: Yoga.POSITION_TYPE_RELATIVE,\n          absolute: Yoga.POSITION_TYPE_ABSOLUTE,\n          count: Yoga.POSITION_TYPE_COUNT,\n        },\n      },\n    ],\n    EDGE: [\n      { key: 'padding', remap: 'padding', edge: Yoga.EDGE_ALL },\n      { key: 'paddingLeft', remap: 'padding', edge: Yoga.EDGE_LEFT },\n      { key: 'paddingRight', remap: 'padding', edge: Yoga.EDGE_RIGHT },\n      { key: 'paddingTop', remap: 'padding', edge: Yoga.EDGE_TOP },\n      { key: 'paddingBottom', remap: 'padding', edge: Yoga.EDGE_BOTTOM },\n\n      { key: 'left', remap: 'position', edge: Yoga.EDGE_LEFT },\n      { key: 'right', remap: 'position', edge: Yoga.EDGE_RIGHT },\n      { key: 'top', remap: 'position', edge: Yoga.EDGE_TOP },\n      { key: 'bottom', remap: 'position', edge: Yoga.EDGE_BOTTOM },\n\n      { key: 'margin', remap: 'margin', edge: Yoga.EDGE_ALL },\n      { key: 'marginLeft', remap: 'margin', edge: Yoga.EDGE_LEFT },\n      { key: 'marginRight', remap: 'margin', edge: Yoga.EDGE_RIGHT },\n      { key: 'marginTop', remap: 'margin', edge: Yoga.EDGE_TOP },\n      { key: 'marginBottom', remap: 'margin', edge: Yoga.EDGE_BOTTOM },\n\n      { key: 'borderWidth', remap: 'border', edge: Yoga.EDGE_ALL },\n      { key: 'borderLeftWidth', remap: 'border', edge: Yoga.EDGE_LEFT },\n      { key: 'borderRightWidth', remap: 'border', edge: Yoga.EDGE_RIGHT },\n      { key: 'borderTopWidth', remap: 'border', edge: Yoga.EDGE_TOP },\n      { key: 'borderBottomWidth', remap: 'border', edge: Yoga.EDGE_BOTTOM },\n    ],\n  };\n\n  AVAILABLE.VALUE.forEach(key => {\n    const func = funcName(key);\n    STYLE_MAP[key] = value => parseValue(func, value);\n  });\n\n  AVAILABLE.ENUM.forEach(item => {\n    const func = funcName(item.remap || item.key);\n    const enums = item.enum;\n    STYLE_MAP[item.key] = value => parseEnum(func, enums, value);\n  });\n\n  AVAILABLE.EDGE.forEach(item => {\n    const func = funcName(item.remap);\n    const { edge } = item;\n    STYLE_MAP[item.key] = value => parseEdge(func, edge, value);\n  });\n}\n\npromise.then(init);\n\n// function _apply(yoga: Yoga.YogaNode, style: any) {\n//   for (const key in style) {\n//     const func = STYLE_MAP[key]\n//     func && checkAndRun(yoga, ...func(style[key]))\n//   }\n// }\n\nconst cache = new WeakMap<any, StyleParams[]>();\n\nfunction _apply(yoga: YogaNode, style: any) {\n  if (style) {\n    if (!cache.has(style)) {\n      const _styles: StyleParams[] = [];\n      for (const key in style) {\n        const func = STYLE_MAP[key];\n        func && _styles.push(func(style[key]));\n      }\n      cache.set(style, _styles);\n    }\n    const styles = cache.get(style)!;\n    for (let i = 0; i < styles.length; i++) {\n      checkAndRun(yoga, ...styles[i]);\n    }\n  }\n}\n\nexport default function apply(yoga: YogaNode, style: any) {\n  if (style) {\n    flatten([style]).forEach(s => _apply(yoga, s));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}