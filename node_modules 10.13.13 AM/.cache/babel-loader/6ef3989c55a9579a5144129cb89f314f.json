{"ast":null,"code":"import _classCallCheck from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fimplus/Desktop/revasReal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { adapter } from '../../core/utils';\nimport renderer from '../../core/reconciler';\n\nvar CachedImage = /*#__PURE__*/function () {\n  _createClass(CachedImage, [{\n    key: \"empty\",\n    get: function get() {\n      return this.targets.length === 0;\n    }\n  }]);\n\n  function CachedImage(src) {\n    var _this = this;\n\n    _classCallCheck(this, CachedImage);\n\n    this.src = src;\n    this.image = adapter.createImage();\n    this.targets = [];\n    this._ready = false;\n\n    this.onload = function () {\n      _this._ready = true;\n      renderer.batchedUpdates(function () {\n        _this.targets.forEach(function (target) {\n          return target(_this.image);\n        });\n      });\n    };\n\n    this.onerror = function () {};\n\n    if (!this.image) {\n      throw new Error('Revas: createImage must be initialized');\n    }\n\n    this.image.onload = this.onload;\n    this.image.onerror = this.onerror;\n    this.image.src = src;\n  }\n\n  _createClass(CachedImage, [{\n    key: \"add\",\n    value: function add(target) {\n      if (this.targets.indexOf(target) < 0) {\n        this.targets.push(target);\n\n        if (this._ready) {\n          target(this.image);\n        }\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(target) {\n      var index = this.targets.indexOf(target);\n      this.targets.splice(index, 1);\n    }\n  }]);\n\n  return CachedImage;\n}();\n\nvar cache = new Map();\nexport function get(src, target) {\n  if (!cache.has(src)) {\n    cache.set(src, new CachedImage(src));\n  }\n\n  var cached = cache.get(src);\n  target && cached.add(target);\n  return cached.image;\n}\nexport function remove(src, target) {\n  if (cache.has(src)) {\n    var cached = cache.get(src);\n    cached.remove(target);\n\n    if (cached.empty) {\n      cache.delete(src);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/fimplus/Desktop/revasReal/src/revas/components/common/imageLoader.ts"],"names":["adapter","renderer","CachedImage","targets","length","src","image","createImage","_ready","onload","batchedUpdates","forEach","target","onerror","Error","indexOf","push","index","splice","cache","Map","get","has","set","cached","add","remove","empty","delete"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;IAEMC,W;;;wBAIQ;AACV,aAAO,KAAKC,OAAL,CAAaC,MAAb,KAAwB,CAA/B;AACD;;;AACD,uBACkBC,GADlB,EAEE;AAAA;;AAAA;;AAAA,SADgBA,GAChB,GADgBA,GAChB;AAAA,SAROC,KAQP,GAReN,OAAO,CAACO,WAAR,EAQf;AAAA,SAPeJ,OAOf,GAPqC,EAOrC;AAAA,SANMK,MAMN,GANe,KAMf;;AAAA,SAQFC,MARE,GAQO,YAAM;AACb,MAAA,KAAI,CAACD,MAAL,GAAc,IAAd;AACAP,MAAAA,QAAQ,CAACS,cAAT,CAAwB,YAAM;AAC5B,QAAA,KAAI,CAACP,OAAL,CAAaQ,OAAb,CAAqB,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAAC,KAAI,CAACN,KAAN,CAAV;AAAA,SAA3B;AACD,OAFD;AAGD,KAbC;;AAAA,SAcFO,OAdE,GAcQ,YAAM,CAAG,CAdjB;;AACA,QAAI,CAAC,KAAKP,KAAV,EAAiB;AACf,YAAM,IAAIQ,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,SAAKR,KAAL,CAAWG,MAAX,GAAoB,KAAKA,MAAzB;AACA,SAAKH,KAAL,CAAWO,OAAX,GAAqB,KAAKA,OAA1B;AACA,SAAKP,KAAL,CAAWD,GAAX,GAAiBA,GAAjB;AACD;;;;wBAQGO,M,EAAkB;AACpB,UAAI,KAAKT,OAAL,CAAaY,OAAb,CAAqBH,MAArB,IAA+B,CAAnC,EAAsC;AACpC,aAAKT,OAAL,CAAaa,IAAb,CAAkBJ,MAAlB;;AACA,YAAI,KAAKJ,MAAT,EAAiB;AACfI,UAAAA,MAAM,CAAC,KAAKN,KAAN,CAAN;AACD;AACF;AACF;;;2BACMM,M,EAAkB;AACvB,UAAMK,KAAK,GAAG,KAAKd,OAAL,CAAaY,OAAb,CAAqBH,MAArB,CAAd;AACA,WAAKT,OAAL,CAAae,MAAb,CAAoBD,KAApB,EAA2B,CAA3B;AACD;;;;;;AAGH,IAAME,KAAK,GAAG,IAAIC,GAAJ,EAAd;AAGA,OAAO,SAASC,GAAT,CAAahB,GAAb,EAA0BO,MAA1B,EAA6C;AAClD,MAAI,CAACO,KAAK,CAACG,GAAN,CAAUjB,GAAV,CAAL,EAAqB;AACnBc,IAAAA,KAAK,CAACI,GAAN,CAAUlB,GAAV,EAAe,IAAIH,WAAJ,CAAgBG,GAAhB,CAAf;AACD;;AACD,MAAMmB,MAAM,GAAGL,KAAK,CAACE,GAAN,CAAUhB,GAAV,CAAf;AACAO,EAAAA,MAAM,IAAIY,MAAM,CAACC,GAAP,CAAWb,MAAX,CAAV;AACA,SAAOY,MAAM,CAAClB,KAAd;AACD;AAED,OAAO,SAASoB,MAAT,CAAgBrB,GAAhB,EAA6BO,MAA7B,EAA+C;AACpD,MAAIO,KAAK,CAACG,GAAN,CAAUjB,GAAV,CAAJ,EAAoB;AAClB,QAAMmB,MAAM,GAAGL,KAAK,CAACE,GAAN,CAAUhB,GAAV,CAAf;AACAmB,IAAAA,MAAM,CAACE,MAAP,CAAcd,MAAd;;AACA,QAAIY,MAAM,CAACG,KAAX,EAAkB;AAChBR,MAAAA,KAAK,CAACS,MAAN,CAAavB,GAAb;AACD;AACF;AACF","sourcesContent":["import { adapter } from '../../core/utils'\nimport renderer from '../../core/reconciler'\n\nclass CachedImage {\n  readonly image = adapter.createImage()\n  private readonly targets: Function[] = []\n  private _ready = false\n  get empty() {\n    return this.targets.length === 0\n  }\n  constructor(\n    public readonly src: string\n  ) {\n    if (!this.image) {\n      throw new Error('Revas: createImage must be initialized')\n    }\n    this.image.onload = this.onload\n    this.image.onerror = this.onerror\n    this.image.src = src\n  }\n  onload = () => {\n    this._ready = true\n    renderer.batchedUpdates(() => {\n      this.targets.forEach(target => target(this.image))\n    })\n  }\n  onerror = () => { }\n  add(target: Function) {\n    if (this.targets.indexOf(target) < 0) {\n      this.targets.push(target)\n      if (this._ready) {\n        target(this.image)\n      }\n    }\n  }\n  remove(target: Function) {\n    const index = this.targets.indexOf(target)\n    this.targets.splice(index, 1)\n  }\n}\n\nconst cache = new Map<string, CachedImage>()\n\n\nexport function get(src: string, target?: Function) {\n  if (!cache.has(src)) {\n    cache.set(src, new CachedImage(src))\n  }\n  const cached = cache.get(src)!\n  target && cached.add(target)\n  return cached.image\n}\n\nexport function remove(src: string, target: Function) {\n  if (cache.has(src)) {\n    const cached = cache.get(src)!\n    cached.remove(target)\n    if (cached.empty) {\n      cache.delete(src)\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}